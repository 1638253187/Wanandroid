package com.example.windqq.dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.example.windqq.bean.DaoCallBean;
import com.example.windqq.bean.DaoLocation;
import com.example.windqq.bean.DaoMsg;
import com.example.windqq.bean.DaoUserBean;

import com.example.windqq.dao.DaoCallBeanDao;
import com.example.windqq.dao.DaoLocationDao;
import com.example.windqq.dao.DaoMsgDao;
import com.example.windqq.dao.DaoUserBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig daoCallBeanDaoConfig;
    private final DaoConfig daoLocationDaoConfig;
    private final DaoConfig daoMsgDaoConfig;
    private final DaoConfig daoUserBeanDaoConfig;

    private final DaoCallBeanDao daoCallBeanDao;
    private final DaoLocationDao daoLocationDao;
    private final DaoMsgDao daoMsgDao;
    private final DaoUserBeanDao daoUserBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        daoCallBeanDaoConfig = daoConfigMap.get(DaoCallBeanDao.class).clone();
        daoCallBeanDaoConfig.initIdentityScope(type);

        daoLocationDaoConfig = daoConfigMap.get(DaoLocationDao.class).clone();
        daoLocationDaoConfig.initIdentityScope(type);

        daoMsgDaoConfig = daoConfigMap.get(DaoMsgDao.class).clone();
        daoMsgDaoConfig.initIdentityScope(type);

        daoUserBeanDaoConfig = daoConfigMap.get(DaoUserBeanDao.class).clone();
        daoUserBeanDaoConfig.initIdentityScope(type);

        daoCallBeanDao = new DaoCallBeanDao(daoCallBeanDaoConfig, this);
        daoLocationDao = new DaoLocationDao(daoLocationDaoConfig, this);
        daoMsgDao = new DaoMsgDao(daoMsgDaoConfig, this);
        daoUserBeanDao = new DaoUserBeanDao(daoUserBeanDaoConfig, this);

        registerDao(DaoCallBean.class, daoCallBeanDao);
        registerDao(DaoLocation.class, daoLocationDao);
        registerDao(DaoMsg.class, daoMsgDao);
        registerDao(DaoUserBean.class, daoUserBeanDao);
    }
    
    public void clear() {
        daoCallBeanDaoConfig.clearIdentityScope();
        daoLocationDaoConfig.clearIdentityScope();
        daoMsgDaoConfig.clearIdentityScope();
        daoUserBeanDaoConfig.clearIdentityScope();
    }

    public DaoCallBeanDao getDaoCallBeanDao() {
        return daoCallBeanDao;
    }

    public DaoLocationDao getDaoLocationDao() {
        return daoLocationDao;
    }

    public DaoMsgDao getDaoMsgDao() {
        return daoMsgDao;
    }

    public DaoUserBeanDao getDaoUserBeanDao() {
        return daoUserBeanDao;
    }

}
